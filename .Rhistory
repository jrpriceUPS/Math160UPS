t(summaryFrame)
# transpose the data frame
# first remember the names
n <- summaryFrame$name
# transpose all but the first column (name)
summaryFrame <- as.data.frame(t(summaryFrame[,-1]))
colnames(summaryFrame) <- n
summaryFrame$myfactor <- factor(row.names(summaryFrame))
summaryFrame
summaryFrame = data.frame(matrix(ncol = 2+length(Qnum), nrow = 0))
for (i in unique(subEvals$FullCourseName)){
myClass = subset(subEvals, FullCourseName == i, select = Qnum)
avgScores = as.numeric(apply(X = myClass,2,mean,na.rm = TRUE))
newRow = data.frame(Class = i, n = nrow(myClass))
newRow = cbind(newRow,t(avgScores))
summaryFrame = rbind(summaryFrame,newRow)
}
colnames(summaryFrame) = c("Class","n",Qnum)
# transpose the data frame
# first remember the names
n <- summaryFrame$name
# transpose all but the first column (name)
summaryFrame <- as.data.frame(t(summaryFrame[,-1]))
colnames(summaryFrame) <- n
summaryFrame
summaryFrame = data.frame(matrix(ncol = 2+length(Qnum), nrow = 0))
for (i in unique(subEvals$FullCourseName)){
myClass = subset(subEvals, FullCourseName == i, select = Qnum)
avgScores = as.numeric(apply(X = myClass,2,mean,na.rm = TRUE))
newRow = data.frame(Class = i, n = nrow(myClass))
newRow = cbind(newRow,t(avgScores))
summaryFrame = rbind(summaryFrame,newRow)
}
colnames(summaryFrame) = c("Class","n",Qnum)
# transpose the data frame
# first remember the names
n <- summaryFrame$name
# transpose all but the first column (name)
summaryFrame <- as.data.frame(t(summaryFrame))
colnames(summaryFrame) <- n
summaryFrame
head(summaryFrame)
summaryFrame = data.frame(matrix(ncol = length(1+unique(subEvals$FullCourseName)), nrow = 1+length(Qnum)))
summaryFrame = data.frame(matrix(0,ncol = length(1+unique(subEvals$FullCourseName)), nrow = 1+length(Qnum)))
length(Qnum)
summaryFrame = data.frame(matrix(ncol = 1+length(unique(subEvals$FullCourseName)), nrow = 1+length(Qnum)))
rownames(summaryFrame) = c(n,Qnum)
summaryFrame
length(Qnum)
rownames(summaryFrame) = c("n",Qnum)
summaryFrame
summaryFrame = data.frame(matrix(ncol = length(unique(subEvals$FullCourseName)), nrow = 1+length(Qnum)))
rownames(summaryFrame) = c("n",Qnum)
summaryFrame
subEvals
unique(subEvals$FullCourseName)
substr(unique(subEvals$FullCourseName), 1, 4)
colnames = substr(unique(subEvals$FullCourseName), 1, 4)
rm(colnames)
summaryFrame = data.frame(matrix(ncol = length(unique(subEvals$FullCourseName)), nrow = 1+length(Qnum)))
rownames(summaryFrame) = c("n",Qnum)
colnames(summaryFrame) = substr(unique(subEvals$FullCourseName), 1, 4)
summaryFrame
i = "301AFall2019"
myClass = subset(subEvals, FullCourseName == i, select = Qnum)
myClass
avgScores = as.numeric(apply(X = myClass,2,mean,na.rm = TRUE))
avgScores
i
substr(i,1,4)
summaryFrame[,substr(i,1,4)]
summaryFrame
summaryFrame[,substr(i,1,4)] = c(10000,myClass)
summaryFrame[,substr(i,1,4)] = c(10000,avgScores)
summaryFrame
summaryFrame = data.frame(matrix(ncol = length(unique(subEvals$FullCourseName)), nrow = 1+length(Qnum)))
rownames(summaryFrame) = c("n",Qnum)
colnames(summaryFrame) = substr(unique(subEvals$FullCourseName), 1, 4)
for (i in unique(subEvals$FullCourseName)){
myClass = subset(subEvals, FullCourseName == i, select = Qnum)
avgScores = as.numeric(apply(X = myClass,2,mean,na.rm = TRUE))
summaryFrame[,substr(i,1,4)] = c(nrow(myClass),avgScores)
}
summaryFrame
?kable
# Extract summary data from student evals for tables in sabbatical / tenure forms
library(knitr)
knitr::kable(summaryFrame)
knitr::kable(summaryFrame,"latex")
summaryFrame = data.frame(matrix(ncol = length(unique(subEvals$FullCourseName)), nrow = 2+length(Qnum)))
rownames(summaryFrame) = c("n",Qnum,"Average")
colnames(summaryFrame) = substr(unique(subEvals$FullCourseName), 1, 4)
for (i in unique(subEvals$FullCourseName)){
myClass = subset(subEvals, FullCourseName == i, select = Qnum)
avgScores = as.numeric(apply(X = myClass,2,mean,na.rm = TRUE))
summaryFrame[,substr(i,1,4)] = c(nrow(myClass),avgScores,mean(avgScores))
}
knitr::kable(summaryFrame,"latex")
knitr::kable(summaryFrame,"latex",booktabs = T)
source('~/Dropbox/Teaching/Student Evaluations/UPS/evalSummaryScript.R', echo=TRUE)
summaryFrame
knitr::kable(summaryFrame,booktabs = T)
knitr::kable(summaryFrame,booktabs = T)
knitr::kable(summaryFrame,booktabs = T, digits = 2)
source('~/Dropbox/Teaching/Student Evaluations/UPS/evalSummaryScript.R', echo=TRUE)
source('~/Dropbox/Teaching/Student Evaluations/UPS/evalSummaryScript.R', echo=TRUE)
source('~/Dropbox/Teaching/Student Evaluations/UPS/evalSummaryScript.R', echo=TRUE)
source('~/Dropbox/Teaching/Student Evaluations/UPS/evalSummaryScript.R', echo=TRUE)
source('~/Dropbox/Teaching/Student Evaluations/UPS/evalSummaryScript.R', echo=TRUE)
source('~/Dropbox/Teaching/Student Evaluations/UPS/evalSummaryScript.R', echo=TRUE)
knitr::kable(summaryFrame,booktabs = T,digits = 2)
knitr::kable(summaryFrame,"latex",booktabs = T,digits = 2)
1200/.3
library("Math160UPS")
BerkeleyPlots()
devtools::document()
setwd("~/Dropbox/Teaching/Math 160/Math160UPS")
setwd("~/Dropbox/Teaching/Math 160/Math160UPS")
devtools::document()
setwd("~/Dropbox")
BerkeleyPlots()
update_code()
BerkeleyPlots()
library("Math160UPS")
BerkeleyPlots()
BerkeleyPlots()
polls = read.csv(file.choose())
head(polls)
A = c(50,100,10,100,100,12,80,50,80,10,10,10)
B = c(110,100,100,10,80,150,150,10,10)
mean(A)
mean(B)
boxplot(A,B, horizontal = TRUE)
A = c(90,45,25,100,25,30,20,35,100)
B = c(50,115,110,26,130,100,100,150,100,100,105)
mean(A)
B = c(B,300)
mean(B)
boxplot(A,B, horizontal = TRUE)
students = read.csv(file.choose())
head(students)
usethis::use_data(students)
setwd("~/Dropbox/Teaching/Math 160/Math160UPS")
usethis::use_data(students)
setwd("~/Dropbox/Teaching/Math 160/Math160UPS")
usethis::use_data(students)
devtools::use_data(students)
library(devtools)
use_data(students)
use_data(students,overwrite=TRUE)
data(whickham)
table(whikcham)
table(whickham)
prop.table(table(whickham))
prop.table(table(whickham),1)
sm = whickham$Smoke
whickham$Smoke[sm == "Smoker"] = "Nonsmoker"
whickham$Smoke[sm == "Nonsmoker"] = "Smoker"
table(whickham)
prop.table(table(whickham),1)
usethis::use_data(whickham)
usethis::use_data(whickham,overwrite = TRUE)
AgeSmoke = c(rep("Young Nonsmoker",474+65),rep("Young Smoker",437+95),rep("Old Nonsmoker",28+165),rep("Old Smoker",6+44))
Survival = c(rep("Alive",474),rep("Dead",65),rep("Alive",437),rep("Dead",95))
Survival = c(rep("Alive",474),rep("Dead",65),rep("Alive",437),rep("Dead",95),rep("Alive",28),rep("Dead",165),rep("Alive",6),rep("Dead",44))
whickhamClass = data.frame(AgeSmoke = AgeSmoke, Survival = Survival)
table(whickhamClass)
usethis::use_data(whickhamClass)
document()
devtools::document()
graphics.off()
rm(list = ls())
library(Math160UPS)
data(pennies)
View(pennies)
mean(pennies$mass)
median(pennies$mass)
summary(pennies$mass)
boxplot(pennies$mass, horizontal = TRUE)
hist(pennies$mass)
plot(pennies$year, pennies$mass)
oldPennies = subset(pennies, year < 1982)
View(oldPennies)
newPennies = subset(pennies, year > 1982)
View(newPennies)
boxplot(oldPennies, newPennies, horizontal = TRUE)
boxplot(oldPennies$mass, newPennies$mass, horizontal = TRUE)
boxplot(oldPennies$mass, newPennies$mass, horizontal = TRUE, names = c("Old","New"))
boxplot(oldPennies$mass, newPennies$mass, horizontal = TRUE, names = c("Old","New"), xlab = "Mass (grams)")
c(1,2,3,4,5)
c("Old","New")
502/732
443/582
data("whickham")
View(whickham)
table(whickham$Smoke, whickham$Survival)
myGreatTable = table(whickham$Smoke, whickham$Survival)
margin.table(myGreatTable, 1)
margin.table(myGreatTable, 2)
prop.table(myGreatTable)
502/1314
prop.table(myGreatTable, 1)
474+65
437+95
28+165
474/539
437/532
28/193
6/50
exp(-4.1948)
exp(-4.1940)
(0.01508582 - 0.01507376)/0.01507376
(1/2-i/2)
(1/2-I/2)
diseaseTable = as.table(matrix(c(99,1,999,98901),nrow = 2))
diseaseTable
colnames(diseaseTable) = c("Sick","Healthy")
rownames(diseaseTable) = c("Positive Test","Negative Test")
diseaseTable
mosaicplot(diseaseTable)
barplot(diseaseTable, beside = TRUE)
barplot(prop.table(diseaseTable,1))
barplot(prop.table(diseaseTable,1),legend.text = TRUE)
barplot(prop.table(diseaseTable,2),legend.text = TRUE)
myTable = table(students$Coffee,students$Gender, exclude = "")
myTable
myTable = table(students$Coffee,students$Class, exclude = "")
myTbale
myTable
barplot(myTable, beside = TRUE, legend.text = TRUE)
mosaicplot(myTable)
myTable = table(students$Coffee,students$Class, exclude = c("","Other"))
mosaicplot(myTable)
barplot(myTable, beside = TRUE, legend.text = TRUE)
barplot(table(students$Class))
barplot(table(students$Class,exclude = c("","Other")))
pie(table(students$Class,exclude = c("","Other")))
graphics.off()
rm(list = ls())
library("Math160UPS")
data(students)
table(students$Class)
table(students$Class, exclude = c("","Other"))
classTable = table(students$Class, exclude = c("","Other"))
barplot(classTable)
pie(classTable)
barplot(students$Class)
barplot(table(students$Class))
students$Class
coffeeClassTable = table(students$Coffee,students$Class)
coffeeClassTable
coffeeClassTable = table(students$Coffee,students$Class, exclude = c("","Other"))
coffeeClassTable
barplot(coffeeClassTable)
barplot(coffeeClassTable, legend.text = TRUE)
barplot(coffeeClassTable, legend.text = TRUE,beside = TRUE)
?barplot
mosaicplot(coffeeClassTable)
graphics.off()
rm(list = ls())
library("Math160UPS")
data(students)
students$Class
table(students$Class)
table(students$Class, exclude = c("","Other"))
classTable = table(students$Class, exclude = c("","Other"))
barplot(classTable)
pie(classTable)
barplot(students$Class)
table(students$Class,students$Coffee)
table(students$Coffee,students$Class)
table(students$Coffee,students$Class, exclude = c("","Other"))
coffeeClassTable = table(students$Coffee,students$Class, exclude = c("","Other"))
barplot(coffeeClassTable)
barplot(coffeeClassTable, legend.text = TRUE)
barplot(coffeeClassTable, legend.text = TRUE, beside = TRUE)
mosaicplot
mosaicplot(coffeeClassTable)
graphics.0ff()
graphics.off()
5/14
1 - 5/14
4/6-7/14
table(students$Coffee,students$DietPref, exclude = c(""))
table(students$Coffee,students$DietPref, exclude = c("","Kosher"))
table(students$Coffee,students$DietPref, exclude = c("","Kosher","Other"))
11/73-12/51
1/6
sqrt(100*.88*.12)
library(Math160UPS)
data(students)
table(students$Gender)
prop.table(table(students$Gender))
sample(students$Gender,10)
6/10
sample(students$Gender,10)
sample(students$Gender,10)
sample(students$Gender,10)
sample(students$Gender,10)
1-.5448
sqrt(10*.5448*.4552)/10
.5448=.16
.5448+.16
.54-.16
dbinom(0:3,3,.9)
table(students$Gender)
79+51+3
79/133
133/2
sqrt(133*.5*.5)/133
.5-.043
.5-.043-.043
sectionD = c("Emily","Sammi","Aspen","Eden","Navi","Nicole","Aria","Izzy","Ebony","Kalen","Viola","Delaney M.","Bryson","Eli","Moxley","Carson","Forrest","Isaac","Delaney T.","Annie","Calvin","Jena","Austin")
sectionF = c("Zayda","Ainsley","Hannah","Camille","Tatum","Julian","Mimi","Rachel","Sarah","Ella","Noah","Clover","Jack","Ema","Airemus","Jeff","Andrew","Lark","Chloe","Caleb","Alexa","Alex Rediske","Alex Ridley","Kevin","Rico","Lili")
confint_activity(section_name = sectionD)
confint_activity(section_name = "sectionD")
droplevels(subset(students,Coffee == c("Yes","No"))$Coffee)
droplevels(subset(students,Coffee == c("Yes","No")))
subset(students,Coffee == c("Yes","No"))
droplevels(subset(students,Coffee == "Yes" | Coffee == "No")$Coffee)
droplevels(subset(students,Coffee == "Yes" | Coffee == "No")
)
droplevels(subset(students,Coffee == "Yes" | Coffee == "No"))$Coffee
confint_activity(section_name = sectionD)
confint_activity(section_name = "sectionD")
source('~/Dropbox/Teaching/Math 160/Math160UPS/R/confint_activity.R', echo=TRUE)
confint_activity(section_name = "sectionD")
confint_activity(section_name = "sectionF")
usethis::use_data(sectionD)
usethis::use_data(sectionF)
confint_activity(numstudents = 2200)
source('~/Dropbox/Teaching/Math 160/Math160UPS/R/confint_activity.R', echo=TRUE)
confint_activity(numstudents = 2200)
coffee = droplevels(subset(students,Coffee == "Yes" | Coffee == "No"))$Coffee
coffee
prop.table(table(sample(coffee,n)))
n = 20
prop.table(table(sample(coffee,n)))
current = prop.table(table(sample(coffee,n)))
current[2]
data(students)
coffee = droplevels(subset(students,Coffee == "Yes" | Coffee == "No"))$Coffee
myPropTable = prop.table(table(coffee))
trueP = myPropTable[2]
list = rep(0,numstudents)
for (i  in 1:numstudents){
current = prop.table(table(sample(coffee,n)))
list[i] = current[2]
}
numstudents = 2200
data(students)
coffee = droplevels(subset(students,Coffee == "Yes" | Coffee == "No"))$Coffee
myPropTable = prop.table(table(coffee))
trueP = myPropTable[2]
list = rep(0,numstudents)
for (i  in 1:numstudents){
current = prop.table(table(sample(coffee,n)))
list[i] = current[2]
}
list
zstar = -qnorm((1-conf)/2)
upper_bound = list + zstar*sqrt(list*(1-list)/n)
lower_bound = list - zstar*sqrt(list*(1-list)/n)
percent = round(sum(trueP>lower_bound & trueP<upper_bound)/numstudents*100,3)
conf = .95
zstar = -qnorm((1-conf)/2)
upper_bound = list + zstar*sqrt(list*(1-list)/n)
lower_bound = list - zstar*sqrt(list*(1-list)/n)
percent = round(sum(trueP>lower_bound & trueP<upper_bound)/numstudents*100,3)
percent
source('~/Dropbox/Teaching/Math 160/Math160UPS/R/confint_activity.R', echo=TRUE)
confint_activity(numstudents = 2200)
confint_activity(numstudents = 2200)
confint_activity(numstudents = 2200)
confint_activity(numstudents = 2200)
confint_activity(numstudents = 2200)
confint_activity(numstudents = 2200)
confint_activity(numstudents = 2200)
confint_activity(numstudents = 2200, conf = 0.8)
confint_activity(numstudents = 2200, conf = 0.8)
confint_activity(numstudents = 2200, conf = 0.8)
confint_activity(numstudents = 2200, conf = 0.8)
confint_activity(numstudents = 2200, conf = 0.8)
confint_activity(numstudents = 2200, conf = 0.8)
confint_activity(numstudents = 2200, conf = 0.99)
confint_activity(numstudents = 2200, conf = 0.99)
confint_activity(numstudents = 2200, conf = 0.99)
confint_activity(numstudents = 2200, conf = 0.99)
confint_activity(numstudents = 2200, conf = 0.99)
confint_activity(numstudents = 2200, conf = 0.99)
confint_activity(numstudents = 2200, conf = 0.5)
confint_activity(numstudents = 2200, conf = 0.5)
confint_activity(numstudents = 2200, conf = 0.5)
confint_activity(numstudents = 2200, conf = 0.5)
confint_activity(numstudents = 2200, conf = 0.5)
rm(list = ls())
library("Math160UPS")
data(students)
coffee = students$Coffee
sample(coffee,20)
sample(coffee,20)
sample(coffee,20)
coffee = subset(students,Coffee == "Yes" | Coffee == "No)$Coffee
asdf
adfsadf )
)
))))
""
"""
coffee = subset(students,Coffee == "Yes" | Coffee == "No")$Coffee
sample(coffee,20)
table(sample(coffee,20))
sqrt(5)/20
sqrt(20*.5*.5)/20
.5-.222
confint_activity(section = "sectionD")
update_code()
library("Math160UPS")
confint_activity(section = "sectionD")
confint_activity(section = "sectionD")
confint_activity(section = "sectionF")
confint_activity(numstudents = 2300)
confint_activity(numstudents = 2300)
confint_activity(numstudents = 2300)
confint_activity(numstudents = 2300)
.95*2300
confint_activity(section = "sectionD")
confint_activity(section = "sectionF")
confint_activity(numstudents = 2300, conf = 0.68)
confint_activity(numstudents = 2300, conf = 0.68)
confint_activity(numstudents = 2300, conf = 0.68)
confint_activity(numstudents = 2300, conf = 0.68)
normal()
confint_activity(numstudents = 2300, conf = 0.8)
confint_activity(numstudents = 2300, conf = 0.8)
confint_activity(numstudents = 2300, conf = 0.8)
confint_activity(numstudents = 2300, conf = 0.8)
normal()
(1/.03)^2
stat.test()
prop_test()
source('~/Dropbox/Teaching/Math 160/Math160UPS/R/prop_test.R', echo=TRUE)
prop_test()
update_code()
stat.test()
source('~/Dropbox/Teaching/Math 160/Math160UPS/R/prop_test.R', echo=TRUE)
stat.test()
source('~/Dropbox/Teaching/Math 160/Math160UPS/R/stat.test.R', echo=TRUE)
stat.test()
binom.test(x = 9, n = 20, conf.level = 0.95)
confint_activity(section = "sectionD")
7/20
sqrt(20*.35*.65)/20
sqrt(20*.35*.65)/20*1.96+.35
sqrt(20*.35*.65)/20*1.96-.35
stat.test()
normal()
sqrt(20*.35*.65)/20*1.28-.35
sqrt(20*.35*.65)/20*1.28+.35
stat.test()
binom.test(x = 7, n = 20, conf.level = 0.8)
binom.test(x = 16, n = 20, conf.level = 0.95)
2.3/128
hyp_test_activity(section = "sectionD")
library(Math160UPS)
hyp_test_activity(section = "sectionD")
source('~/Dropbox/Teaching/Math 160/Math160UPS/R/hyp_test_activity.R', echo=TRUE)
hyp_test_activity(section = "sectionD")
hyp_test_activity(section = "sectionD")
hyp_test_activity(section = "sectionD")
hyp_test_activity(section = "sectionD")
hyp_test_activity(numstudents = 5000)
hyp_test_activity(numstudents = 5000)
hyp_test_activity(numstudents = 5000)
hyp_test_activity(numstudents = 5000)
source('~/Dropbox/Teaching/Math 160/Math160UPS/R/hyp_test_activity.R', echo=TRUE)
source('~/Dropbox/Teaching/Math 160/Math160UPS/R/hyp_test_activity.R', echo=TRUE)
hyp_test_activity(numstudents = 5000)
hyp_test_activity(section = "sectionD")
hyp_test_activity(section = "sectionD")
hyp_test_activity(section = "sectionD")
sqrt(20*7/20*13/20)/20
7/20+1.96*sqrt(20*7/20*13/20)/20
7/20-1.96*sqrt(20*7/20*13/20)/20
stat.test()
update_code()
source('~/Dropbox/Teaching/Math 160/Math160UPS/R/prop_test.R', echo=TRUE)
source('~/Dropbox/Teaching/Math 160/Math160UPS/R/stat.test.R', echo=TRUE)
stat.test()
sqrt(20*.5*.5)/20
.5-.112
.5-.112*2
7/20
normal()
(.35-.5)/.112
stat.test()
stat.test()
binom.test(x = 7, n = 20, p = 0.5, alternative = 'two.sided', conf.level = 0.95)
hyp_test_activity(section = "sectionD")
hyp_test_activity(section = "sectionF")
hyp_test_activity(numstudents = 2200)
table(students$Coffee)
54/(54+76)
0.5^4
0.5^5
1/6^100
0.5^10
5120/2
.5^10
.008/.017
-.1/.035
.025/.035

0.47+.035
0.47-.035
sqrt(781*.5*.5)/781
9.47-.5)/0.0179
(.47-.5)/0.0179
pnorm(-1.676)*2
stat.test()
918/2135
1.96*0.01017
pnorm((.43-.5)/0.0107)*2
stat.test()
128/6
16/128
5/72
(16+5)/(128+72)
sqrt(128*.105*(1-.105))/128
sqrt(72*.105*(1-.105))/72
sqrt(.0271^2+.0361^2)
(.125-.0694)/.0451
pnorm(-1.23)*2
sqrt(128*.125*.875)/128
sqrt(72*.0694*(1-.0694))/72
sqrt(0.0292^2+0.02995^2)
.125-.0694
1.96*0.0418
1.96*0.0418-0.0556
1.96*0.0418+0.0556
-1.96*0.0418+0.0556
stat.test()
stat.test()
stat.test()
stat,test()
stat.test()
1/6*128
(14-21.33333)/(sqrt(128/6*5/6))
29-21.3333333/(sqrt(128/6*5/6))
(29-21.3333333)/(sqrt(128/6*5/6))
x = c(14,29,11,24,16,34)
(x-21.33333333)/(sqrt(128/6*5/6))
sum((x-21.33333333)/(sqrt(128/6*5/6)))
-1.739+1.818-2.45+0.632-1.265+3.004
sum(((x-21.33333333)/(sqrt(128/6*5/6)))^2)
sum(x)
sum(x)/6
stat.test()
stat.test()
stat.test()
stat.test()
96+145
97+65
241/403
193*.598
193*.402
210*.598
210*.402
(96-115.4)/(sqrt(193*.598*.402))
stat.test()
stat.test()
89+46
9+19
241+135+28
stat.test()
stat.test()
stat.test()
stat.test()
48^3
t_dist_demo()
t_dist_demo(section = "sectionD")
t_dist_demo(section = "sectionF")
t_dist_demo(numstudents = 2600)
t_dist_demo(numstudents = 2600)
t_dist_demo(numstudents = 2600)
t_dist_demo(numstudents = 2600)
t_dist_demo(numstudents = 2600, n = 3)
t_dist_demo(numstudents = 2600, n = 10)
t_dist_demo(numstudents = 2600, n = 30)
library(Math160UPS)
data(students)
students$Sleep
sample(students$Sleep,16)
sample(students$Sleep,16)
sample(students$Sleep,16)
sample(students$Sleep,16)
mySample = sample(students$Sleep,16);mySample
mySample = sample(students$Sleep,16);mySample
mySample = sample(students$Sleep,16);mySample
mySample = sample(students$Sleep,16);mySample
mySample = sample(students$Sleep,16);mySample
mySample = sample(students$Sleep,16);mySample
mySample = sample(students$Sleep,16);mySample
mySample = sample(students$Sleep,16);mySample
mySample = sample(students$Sleep,16);mySample
mySample = sample(students$Sleep,16);mySample
mySample
stripchart(mySample, method = "Stack", xlab = "Hours of Sleep")
stripchart(mySample, method = "stack", xlab = "Hours of Sleep")
hist(mySample, xlab = "Hours of Sleep")
boxplot(mySample, horizontal = TRUE, xlab = "Hours of Sleep")
mean(mySample)
6.66/4
9.7/sqrt(5)
sample(students$Sleep,4)
x = c(9,6,8,9)
mean(x)
sd(x)
mean(students$Sleep,na.rm = TRUE)
t_dist_demo(numstudents = 2600, n = 30)
t_dist_demo()
(8-7.256)/(1.414/sqrt(4))
graphics.off()
t_dist_demo(section = "sectionD")
t_dist_demo(section = "sectionF")
t_dist_demo(section = "sectionF")
t_dist_demo(section = "sectionF")
t_dist_demo(numstudents = 2200)
t_dist_demo(numstudents = 2200, n = 10)
t_dist_demo(numstudents = 2200, n = 30)
(364/365)^3
22*21/2
1-(364/365)^231
1-(364/365)^(55*54/2)
1-(364/365)^(24*23/2)
1-(364/365)^(23*23/2)
1-(364/365)^(23*22/2)
1/365
364/365
1-(364/365)^3
22*21/2
1-(364/365)^231
1-(364/365)^(50*49/2)
students$Sleep[students$Sleep != NA]
students$Sleep[students$Sleep == NA]
students$Sleep
students$Sleep[students$Sleep != NA,]
students[students$Sleep != NA]$Sleep
students[students$Sleep != NA]
students[students$Sleep != NA,]
students[students$Sleep != NA,"Sleep"]
students[!is.na(students$Sleep),"Sleep"]
x = students[!is.na(students$Sleep),"Sleep"]
View(x)
a = sample(x,4)
mean(a)
sd(a)
a
stat.test()
a = sample(x,9)
mean(a)
sd(a)
a = sample(x,9)
a
a = sample(x,9)
mean(x)
a = sample(x,9)
a
mean(a)
sd(a)
stat.test()
(6.89-8)/(1.453/3)
stat.test()
mean(students$Sleep,na.rm = TRUE)
sd(students$Sleep,na.rm = TRUE)
!is.na(students$Sleep)
sum(!is.na(students$Sleep))
stat.test()
stat.test()
beer = c(6.89,6.91,7.04)
mean(beer)
sd(beer)
stat.test()
stat.test()
t.test(beer, mu = 7.2, conf.level = 0.99)
stat.test()
stat.test()
stat.test()
pretest = c(0.25, 2, 3, 0, 10)
posttest = c(12.5, 20, 6.5, 7, 9.75)
improvement = posttest - pretest
improvement
stat.test()
mean(improvement)
sd(improvement)
stat.test()
stat.test()
stat.test()
pretest = c(1,10.5,7,6.5,3,32)
posttest = c(87,95.5,100,99,91,75)
improvement = posttest - pretest
stat.test()
stat.test()
.37/2
3+3+1+2+18.5+27.5+23+22
head(students)
table(students$TimeZone)
table(students$Handedness)
underclassmen = subset(students, Class == "First-year" | Class == "Sophomore")
upperclassmen = subset(students, Class == "Junior" | Class == "Senior")
boxplot(underclassmen$Study,upperclassmen$Study)
boxplot(underclassmen$Work,upperclassmen$Work)
t.test(underclassmen$Work,upperclassmen$Work)
t.test(underclassmen$Study,upperclassmen$Study)
control = c(12.25,18,3.5,7,-0.25)
treat = c(86,85,93,92.5,88,75)
boxplot(control,treat, names = c("Lectures","Active Learning"),horizontal = TRUE)
stat.test()
stat.test()
boxplot(underclassmen$Study, upperclassmen$Study, horizontal = TRUE, names = c("Underclassmen","Upperclassmen"))
boxplot(underclassmen$Study, upperclassmen$Study, horizontal = TRUE, names = c("Underclassmen","Upperclassmen"), xlab = "Hours studying per week")
stat.test()
stat.test()
upperclassmen$Study
underclassmen$Study
100*99*98*97*96*95*94*93*92*91
90/(100*99*98*97*96*95*94*93*92*91)
log(90) - log(100)-log(99)-log(98)-log(97)-log(96)-log(95)-log(94)-log(93)-log(92)-log(91)
exp(-41.08693)
90*10*9*8*7*6*5*4*3*2*1/(100*99*98*97*96*95*94*93*92*91)
EC = c(88,55,20,73,74,45,57,55,44,47,50,45,50,38,25,38,57,73,53,68,62,27,50,43,55,50,39,56,20,37,8,50,62,67,65,69,12,50,20,12)
mean(EC)
p = c(1,3,2,5,2,4,1)
p = p/sum(p)
p
sum(p)
x = 1:7
sum(x*p)
sum((x-sum(x*p))^2*p)
sqrt(sum((x-sum(x*p))^2*p))
sum((x-sum(x*p))^2*p)*10/100
sqrt(sum((x-sum(x*p))^2*p)*10/100)
library("Math160UPS")
confint_activity(section = "sectionD")
confint_activity(section = "sectionF")
confint_activity(section = "sectionD")
data(students)
table(sample(students$Coffee,20))
table(sample(students$Coffee,20))
table(sample(students$Coffee,20))
table(sample(students$Coffee,20))
table(sample(students$Coffee,20))
table(sample(students$Coffee,20))
table(sample(students$Coffee,20))
table(sample(students$Coffee,20))
table(sample(students$Coffee,20))
table(sample(students$Coffee,20))
table(sample(students$Coffee,20))
table(sample(students$Coffee,20))
table(sample(students$Coffee,20))
table(sample(students$Coffee,20))
table(sample(students$Coffee,20))
table(sample(students$Coffee,20))
table(sample(students$Coffee,20))
table(sample(students$Coffee,20))
table(sample(students$Coffee,20))
sqrt(.45*.45/20)
confint_activity(section = "sectionD")
confint_activity(numstudents = 2600)
normal()
stat.test()
sqrt(7/20*13/20/20)
confint_activity(section = "sectionF")
confint_activity(section = "sectionF")
confint_activity(section = "sectionF")
confint_activity(numstudents = 2600)
normal()
stat.test()
stat.test()
binom.test(x = 6, n = 20, conf.level = 0.95)
stat.test()
table(students$Coffee, exclude="")
prop.table(table(students$Coffee, exclude=""))
sample(1:9)
x = c("Caleb","Zayda","Alexa","Airemus","Ema","Julian","Mimi","Tatum","Kevin","Noah","Sarah","Chloe")
length(x)
sample(x)
confint_activity()
binom.test(5,15)
binom.test(5,20)
stat.test()
hyp_test_activity(section="sectionD")
graphics.off()
stat.test()
hyp_test_activity(section="sectionF")
prop.test(table(students$Coffee, exclude = ""))
prop.table(table(students$Coffee, exclude = ""))
stat.test()
stat.test()
stat.test()
stat.test()
binom.test(x = 918, n = 2135, p = 0.5, alternative = 'two.sided', conf.level = 0.95)
stat.test()
367/781
stat.test()
.03/1.96
(.03/1.96)^2
.25/(.03/1.96)^2
stat.test()
stat.test()
prop.test(c(6,7), c(71,56), alternative = 'two.sided', conf.level = 0.95)
graphics.off()
stat.test()
.386*2
stat.test()
prop.test(c(12,6), c(71,55), alternative = 'two.sided', conf.level = 0.95)
stat.test()
data = c(6,18,23,12,5,17)
prob = rep(1/6,6)
chisq.test(data,p=prob)
stat.test()
graphics.off()
stat.test()
6/56
12/71
stat.test()
c(18,6,23,12,5,17)
prob = rep(1/6,6)
chisq.test(data,p = prob)
stat.test()
stat.test()
stat.test()
stat.test()
stat.test()
graphics.off()
stat.test()
x = c(96,145,97,65)
xe = c(115.4,125.6,77.6,84.4)
sum(((x-xe)/xe)^2
)
((x-xe)/xe)^2
((x-xe)^2/xe)
sum(((x-xe)^2/xe))
stat.test()
96+145
89+46
9+19
96+89+9
145+46+19
stat.test()
stat.test()
t_dist_demo()
t_dist_demo(section="sectionD")
t_dist_demo(n=3
)
t_dist_demo(numstudents = 10000)
t_dist_demo(numstudents = 10000, N = 3)
t_dist_demo(numstudents = 10000, n = 3)
t_dist_demo(numstudents = 10000, n = 10)
t_dist_demo(numstudents = 10000, n = 10)
t_dist_demo(numstudents = 10000, n = 20)
sqrt(.5*.5/9)
sqrt(.5*.5/9)-.5
sqrt(.5*.5/9)*2+.5
9.34/sqrt(5)
sd(c(6,7,7,8))
(7-8)/(.816/sqrt(4))
graphics.off()
t_dist_demo(section = "sectionD")
t_dist_demo(numstudents = 10000)
t_dist_demo(numstudents = 10000, n = 3)
graphics.off()
5/sqrt(5)
8.83/sqrt(5)
x = c(6,7,7,8)
mean(x)
sd(x)
mean(students$Sleep,na.rm=TRUE)
t_dist_demo(section="sectionF")
t_dist_demo(numstudents = 10000)
t_dist_demo(numstudents = 10000, n = 20)
t_dist_demo(section="sectionF", n = 20)
N
stat.test()
x = c(7, 7, 7, 6, 6, 8, 7, 6, 6, 7, 8, 7, 8, 10, 6, 6, 8, 8, 7, 9)
mean(x)
hist(x)
sd(x)
stat.test()
x = c(7, 7, 7, 6, 6, 8, 7, 6, 6, 7, 8, 7, 8, 10, 6, 6, 8, 8, 7, 9)
t.test(x-8)
hist(x)
2.09*1.105/sqrt(20)
2.09*1.105/sqrt(20)-7.2
graphics.off()
x
mean(x)
sd(x)
stat.test()
x = c(6.89,6/91,7.04)
mean(x)
x = c(6.89,6.91,7.04)
mean(x)
sd(x)
beer = c(6.89, 6.91, 7.04)
t.test(beer, mean = 8)
t.test(beer, mu = 8)
beer
mean(beer)
sd(beer)
stat.test()
stat.test()
t.test(beer, mu = 7.2)
x = c(7, 7, 7, 6, 6, 8, 7, 6, 6, 7, 8, 7, 8, 10, 6, 6, 8, 8, 7, 9)
hist(x)
mean(x)
sd(x)
(7.2-8)/(1.105/sqrt(20))
x
mean(x)
sd(x)
stat.test()
x
stat.test()
t.test(x, mu = 8)
mean(beer)
sd(beer)
t.test(beer, mu = 7.2)
setwd("~/Dropbox/Teaching/Math 160/Math160UPS")
devtools::document()
devtools::document()
source('~/Dropbox/Teaching/Math 160/Math160UPS/R/co2_v_temp.R', echo=TRUE)
source('~/Dropbox/Teaching/Math 160/Math160UPS/R/co2_v_temp.R', echo=TRUE)
modern_co2
data(modern_co2_backup)
modern_co2 = modern_co2_backup
# .. What are the columns and how are they related? What's the best way to plot
#    the data?
plot(modern_co2$year, modern_co2$co2, xlab="Year", ylab = "CO2 (ppm)",
main="Atmospheric CO2 Concentration from 1958-2020")
plot(modern_co2$year, modern_co2$co2, xlab="Year", ylab = "CO2 (ppm)",
main="Atmospheric CO2 Concentration from 1958-2020", type = "l")
plot(modern_co2$decimal_date, modern_co2$co2, xlab="Year", ylab = "CO2 (ppm)",
main="Atmospheric CO2 Concentration from 1958-2020", col="red", type = "l")
# .. Get T and co2 on the same year grid
modern_polar <- get_modern_polar_T_and_co2_on_same_grid(modern_polar_T, modern_co2)
# .. Plot CO2 and T concentration as a function of year
plot_timeseries_modern_co2_and_T(modern_polar)
source('~/Dropbox/Teaching/Math 160/Math160UPS/R/co2_v_temp_rsrc.R', echo=TRUE)
source('~/Dropbox/Teaching/Math 160/Math160UPS/R/co2_v_temp_rsrc.R', echo=TRUE)
# .. Get T and co2 on the same year grid
modern_polar <- get_modern_polar_T_and_co2_on_same_grid(modern_polar_T, modern_co2)
# .. Plot CO2 and T concentration as a function of year
plot_timeseries_modern_co2_and_T(modern_polar)
# .. Now plot CO2 v polar T
plot(modern_polar$co2, modern_polar$T, xlab = 'CO2 (ppm)',
ylab = 'Temperature (C)', main = 'Temperature vs CO2 at Utqiagvik, Alaska')
# .. Get the correlation coefficient
cor(modern_polar$co2, modern_polar$T)
cor(modern_polar$co2, modern_polar$T, use = "complete.obs")
# .. It turns out to be more convenient to work with the temperature
#    anomaly, or the difference in temperature from some time period.
#    That allows you to compare temperature trends in different locations
#    Here we plot the anomaly. Note that the plot looks the same; only
#    the y tick labels have changed
plot(modern_polar$co2, modern_polar$T_anomaly,
xlab = 'CO2 (ppm)',  ylab = 'Temperature Anomaly (C)',
main = 'Temperature Anomaly at Utqiagvik, Alaska')
# .. The correlation coefficient is the same too.
cor(modern_polar$co2, modern_polar$T_anomaly, use = "complete.obs")
# .. Use the linear model (lm) function
relation <- lm(modern_polar$T_anomaly ~ modern_polar$co2)
print(relation)
print(summary(relation))
# .. Find the best fit line, add it to the model, and to the plot
model = lm(modern_polar$T_anomaly~modern_polar$co2)
model
abline(model)
# .. Plot temperature anomaly and CO2from the ice core record
ice_core = get_ice_core_T_and_co2_on_same_grid(ice_core_co2, ice_core_T)
# FIX THE YEAR PENNY!!!!
plot_timeseries_ice_core_co2_and_T(ice_core_co2, ice_core_T)
plot(ice_core$co2, ice_core$temperature, col = 'blue',
main = 'Temperature Anomaly',
xlab = 'CO2 (ppm)', ylab = 'Temperature Anomaly (C)')
cor(ice_core$co2, ice_core$temperature, use = "complete.obs")
plot(ice_core$co2, ice_core$temperature,
col = 'blue', main = 'Temperature Anomaly',
xlab = 'CO2 (ppm)', ylab = 'Temperature Anomaly (C)')
# .. Add T anomaly vs CO2 for modern times:
#    most recent ice core, polar, and global
add_modern_to_plot(ice_core, modern_polar)
source('~/Dropbox/Teaching/Math 160/Math160UPS/R/co2_v_temp.R', echo=TRUE)
devtools::document()
data(bears)
head(bears)
source('~/Dropbox/Teaching/Math 160/Math160UPS/R/co2_v_temp.R', echo=TRUE)
devtools::document()
usethis::use_data(bears)
devtools::document
devtools::document()
bears
devtools::document()
traceback()
bindingIsLocked("bears","global")
bindingIsLocked("bears",)
bindingIsLocked("bears",.GlobalEnv)
bindingIsLocked("bears",src)
?copy_env_lazy
devtools::document()
devtools::document()
setwd("~/Dropbox/Teaching/Math 160/Math160UPS")
devtools::document()
devtools::document()
devtools::document()
devtools::document()
baseenv()
devtools::document()
update_code()
data(bears)
library("Math160UPS")
data(bears)
data(grapes)
update_code()
Math160UPS::update_code()
